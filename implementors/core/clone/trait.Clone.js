(function() {var implementors = {};
implementors['minwin'] = ["impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/access/enum.GenericAccess.html' title='minwin::access::GenericAccess'>GenericAccess</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/access/enum.StandardAccess.html' title='minwin::access::StandardAccess'>StandardAccess</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/mapping/enum.FileMappingAttribute.html' title='minwin::mapping::FileMappingAttribute'>FileMappingAttribute</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/mapping/enum.FileMappingAccess.html' title='minwin::mapping::FileMappingAccess'>FileMappingAccess</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/mapping/enum.FileViewWriteMode.html' title='minwin::mapping::FileViewWriteMode'>FileViewWriteMode</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='minwin/pipe/struct.PipeInfo.html' title='minwin::pipe::PipeInfo'>PipeInfo</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/pipe/enum.PipeType.html' title='minwin::pipe::PipeType'>PipeType</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/pipe/enum.PipeEnd.html' title='minwin::pipe::PipeEnd'>PipeEnd</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='minwin/pipe/struct.PipeState.html' title='minwin::pipe::PipeState'>PipeState</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/pipe/enum.ReadMode.html' title='minwin::pipe::ReadMode'>ReadMode</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='minwin/pipe/struct.PeekInfo.html' title='minwin::pipe::PeekInfo'>PeekInfo</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='minwin/string/struct.NulError.html' title='minwin::string::NulError'>NulError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/sync/enum.EventAccess.html' title='minwin::sync::EventAccess'>EventAccess</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/sync/enum.MutexAccess.html' title='minwin::sync::MutexAccess'>MutexAccess</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/sync/enum.SemaphoreAccess.html' title='minwin::sync::SemaphoreAccess'>SemaphoreAccess</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='minwin/sync/enum.WaitableTimerAccess.html' title='minwin::sync::WaitableTimerAccess'>WaitableTimerAccess</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
