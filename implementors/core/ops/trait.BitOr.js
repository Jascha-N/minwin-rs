(function() {var implementors = {};
implementors['minwin'] = ["impl&lt;T: <a class='trait' href='minwin/access/trait.CombinableAccess.html' title='minwin::access::CombinableAccess'>CombinableAccess</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.BitOr.html' title='core::ops::BitOr'>BitOr</a>&lt;T&gt; for <a class='struct' href='minwin/access/struct.CustomAccess.html' title='minwin::access::CustomAccess'>CustomAccess</a>","impl&lt;T: <a class='trait' href='minwin/access/trait.CombinableAccess.html' title='minwin::access::CombinableAccess'>CombinableAccess</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.BitOr.html' title='core::ops::BitOr'>BitOr</a>&lt;T&gt; for <a class='struct' href='minwin/access/struct.SystemSecurityAccess.html' title='minwin::access::SystemSecurityAccess'>SystemSecurityAccess</a>","impl&lt;T: <a class='trait' href='minwin/access/trait.CombinableAccess.html' title='minwin::access::CombinableAccess'>CombinableAccess</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.BitOr.html' title='core::ops::BitOr'>BitOr</a>&lt;T&gt; for <a class='enum' href='minwin/access/enum.GenericAccess.html' title='minwin::access::GenericAccess'>GenericAccess</a>","impl&lt;T: <a class='trait' href='minwin/access/trait.CombinableAccess.html' title='minwin::access::CombinableAccess'>CombinableAccess</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.BitOr.html' title='core::ops::BitOr'>BitOr</a>&lt;T&gt; for <a class='enum' href='minwin/access/enum.StandardAccess.html' title='minwin::access::StandardAccess'>StandardAccess</a>","impl&lt;T: <a class='trait' href='minwin/access/trait.CombinableAccess.html' title='minwin::access::CombinableAccess'>CombinableAccess</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.BitOr.html' title='core::ops::BitOr'>BitOr</a>&lt;T&gt; for <a class='enum' href='minwin/mapping/enum.FileMappingAccess.html' title='minwin::mapping::FileMappingAccess'>FileMappingAccess</a>","impl&lt;T: <a class='trait' href='minwin/access/trait.CombinableAccess.html' title='minwin::access::CombinableAccess'>CombinableAccess</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.BitOr.html' title='core::ops::BitOr'>BitOr</a>&lt;T&gt; for <a class='enum' href='minwin/sync/enum.EventAccess.html' title='minwin::sync::EventAccess'>EventAccess</a>","impl&lt;T: <a class='trait' href='minwin/access/trait.CombinableAccess.html' title='minwin::access::CombinableAccess'>CombinableAccess</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.BitOr.html' title='core::ops::BitOr'>BitOr</a>&lt;T&gt; for <a class='enum' href='minwin/sync/enum.MutexAccess.html' title='minwin::sync::MutexAccess'>MutexAccess</a>","impl&lt;T: <a class='trait' href='minwin/access/trait.CombinableAccess.html' title='minwin::access::CombinableAccess'>CombinableAccess</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.BitOr.html' title='core::ops::BitOr'>BitOr</a>&lt;T&gt; for <a class='enum' href='minwin/sync/enum.SemaphoreAccess.html' title='minwin::sync::SemaphoreAccess'>SemaphoreAccess</a>","impl&lt;T: <a class='trait' href='minwin/access/trait.CombinableAccess.html' title='minwin::access::CombinableAccess'>CombinableAccess</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.BitOr.html' title='core::ops::BitOr'>BitOr</a>&lt;T&gt; for <a class='enum' href='minwin/sync/enum.WaitableTimerAccess.html' title='minwin::sync::WaitableTimerAccess'>WaitableTimerAccess</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
